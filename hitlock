
--[[
r - lock player
q - shoot/hit locked player
l - dupe tools
v - minigun (dupped tools required)
c - sniper rifle (dupped tools required)
]]

local Ctrl_click_tp = false
local plrs = game:GetService'Players'
local plr = plrs.LocalPlayer
local mouse = plr:GetMouse()
local rep = game:GetService'ReplicatedStorage'
local uis = game:GetService'UserInputService'
local ts = game:GetService'TweenService'
local rs = game:GetService'RunService'.RenderStepped
local function findplr(Target)
    local name = Target
    local found = false
    for _,v in pairs(game.Players:GetPlayers()) do 
        if not found and (v.Name:lower():sub(1,#name) == name:lower() or v.DisplayName:lower():sub(1,#name) == name:lower()) then
            name = v
            found = true
        end
    end
    if name ~= nil and name ~= Target then
        return name
    end
end
local function Notify(title,text,duration)
    game:GetService'StarterGui':SetCore('SendNotification',{
    Title = tostring(title),
    Text = tostring(text),
    Duration = tonumber(duration),
    })
end
local function AddCd(tool,Cd)
    local cd = Instance.new('IntValue',tool)
    cd.Name = 'ClientCD'
    game.Debris:AddItem(cd,Cd)
end
local function Shoot(firstPos,nextPos,Revolver)
    if Revolver:FindFirstChild'Barrel' and Revolver.Barrel:FindFirstChild'Attachment' then
    if Revolver.Barrel.Attachment:FindFirstChild'Sound' then
    local SoundClone = Revolver.Barrel.Attachment.Sound:Clone()
    SoundClone.Name = 'Uncopy'
    SoundClone.Parent = Revolver.Barrel.Attachment
    SoundClone:Play()
    game.Debris:AddItem(SoundClone, 1)
    end
    local FilterTable = {}
    table.insert(FilterTable, plr.Character)
    table.insert(FilterTable, game.Workspace['Target Filter'])
    for _, v in pairs(game.Workspace:GetDescendants()) do
    if v.ClassName == 'Accessory' then
    table.insert(FilterTable, v)
    end
    end
    local a_1, a_2, a_3 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(firstPos, (nextPos - firstPos).Unit * 100), FilterTable)
    local BulletCl = rep['Revolver Bullet']:Clone()
    game.Debris:AddItem(BulletCl, 1)
    BulletCl.Parent = game.Workspace['Target Filter']
    local mg = (firstPos - a_2).Magnitude
    BulletCl.Size = Vector3.new(0.2, 0.2, mg)
    BulletCl.CFrame = CFrame.new(firstPos, nextPos) * CFrame.new(0, 0, -mg / 2)
    ts:Create(BulletCl, TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
    Size = Vector3.new(0.05, 0.05, mg), 
    Transparency = 1
    }):Play()
    if a_1 then
    local expPart = Instance.new'Part'
    game.Debris:AddItem(expPart, 2)
    expPart.Name = 'Exploding Neon Part'
    expPart.Anchored = true
    expPart.CanCollide = false
    expPart.Shape = 'Ball'
    expPart.Material = Enum.Material.Neon
    expPart.BrickColor = BulletCl.BrickColor
    expPart.Size = Vector3.new(0.1, 0.1, 0.1)
    expPart.Parent = game.Workspace['Target Filter']
    expPart.Position = a_2
    ts:Create(expPart, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
    Size = Vector3.new(2, 2, 2), 
    Transparency = 1
    }):Play()
    if Revolver:FindFirstChild'DamageRemote' and a_1.Parent:FindFirstChild'Humanoid' then
    Revolver.DamageRemote:FireServer(a_1.Parent.Humanoid)
    end
    end
    end
end
mouse.Button1Down:connect(function()
    if not uis:IsKeyDown(Enum.KeyCode.LeftControl) then return end if not mouse.Hit then return end 
    if plr.Character and plr.Character:FindFirstChild'HumanoidRootPart' then
        plr.Character:FindFirstChild'HumanoidRootPart'.CFrame = mouse.Hit + Vector3.new(0,5,0)
    end
end)
local tar
plr:GetMouse().KeyDown:Connect(function(key)
    if key == 'r' then
        tar = nil
        for _,v in next,workspace:GetDescendants() do
            if v.Name == 'SelectedPlayer' then
                v:Destroy()
            end
        end
        local n_plr, dist
        for _, v in pairs(game.Players:GetPlayers()) do
            if v ~= plr and plr.Character and plr.Character:FindFirstChild'HumanoidRootPart' then
                local distance = v:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position)
                if v.Character and (not dist or distance <= dist) and v.Character:FindFirstChildOfClass'Humanoid' and v.Character:FindFirstChildOfClass'Humanoid'.Health>0 and v.Character:FindFirstChild'HumanoidRootPart' then
                    dist = distance
                    n_plr = v
                end
            end
        end
        local sp = Instance.new('SelectionBox',n_plr.Character.HumanoidRootPart)
        sp.Name = 'SelectedPlayer'
        sp.Adornee = n_plr.Character.HumanoidRootPart
        tar = n_plr
    elseif key == 'q' and tar and plr.Character then
        for _,v in next,plr.Character:GetDescendants() do
            if v:IsA'Tool' and v.Name ~= 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'DamageRemote' and v:FindFirstChild'Cooldown' and tar and tar.Character and tar.Character:FindFirstChildOfClass'Humanoid' then
                AddCd(v,v.Cooldown.Value)
                v.DamageRemote:FireServer(tar.Character:FindFirstChildOfClass'Humanoid')
                if v:FindFirstChild'Attack' and plr.Character:FindFirstChildOfClass'Humanoid' then
                    plr.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Attack):Play()
                end
                if v:FindFirstChild'Blade' then
                    for _,x in next,v.Blade:GetChildren() do
                        if x:IsA'Sound' then
                            x:Play()
                        end
                    end
                end
            elseif v:IsA'Tool' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' and tar and tar.Character and tar.Character:FindFirstChild'HumanoidRootPart' then
                v.Parent = plr.Character
                AddCd(v,2)
                rs:wait()
                Shoot(v.Barrel.Attachment.WorldPosition,tar.Character.HumanoidRootPart.Position,v)
                v.ReplicateRemote:FireServer(tar.Character.HumanoidRootPart.Position)
            end
        end
    elseif key == 'c' and plr:FindFirstChild'Backpack' then
        local guns = 0
        for _,v in next,plr.Backpack:GetChildren() do
            if guns<= 10 and plr.Character and plr.Character:FindFirstChild'Head' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' then
                guns = guns+1
                AddCd(v,2)
                v.Parent = plr.Character
                Shoot(plr.Character.Head.Position,mouse.Hit.p,v)
                v.ReplicateRemote:FireServer(mouse.Hit.p)
                v.Parent = plr.Backpack
            end
        end
    elseif key == 'v' then
        for _,v in next,plr.Backpack:GetChildren() do
            if plr.Character and plr.Character:FindFirstChild'Head' and v.Name == 'Kawaii Revolver' and v:FindFirstChild'ReplicateRemote' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' then
                AddCd(v,2)
                v.Parent = plr.Character
                Shoot(v.Barrel.Attachment.WorldPosition,mouse.Hit.p,v)
                v.ReplicateRemote:FireServer(mouse.Hit.p)
                rs:wait()
                v.Parent = plr.Backpack
            end
        end
    elseif key == 'l' and plr.Character then
        Notify('Dupping','Time left: 25 sec',5)
        spawn(function()
            local c = 1
            for i = 1,50 do
                pcall(function()
                    if c>#rep.Weapons:GetChildren() then
                        c = 1
                    end
                end)
                for _,v in next,plr.Character:GetChildren() do
                    if v.Name == 'Loaded' and v:IsA'IntValue' then
                        v:Destroy()
                    end
                end
                for _,v in next,plr.PlayerGui:GetDescendants() do
                    if v:IsA'RemoteEvent' and v.Name == 'RemoteEvent' then
                        pcall(function()
                            v:FireServer(rep.Weapons:GetChildren()[c].Name)
                            c=c+1
                        end)
                    end
                end
                wait(0.5)
            end
        end)
    end
end)

local library = loadstring(game:HttpGet('https://raw.githubusercontent.com/1111-ssss/raw-script/main/UI_Library'))()

local wd = library.CreateWindow({Name = "CHAOS Script"})
local pg1 = wd.CreatePage({Name = "Main"})
local pg2 = wd.CreatePage({Name = "Dupe"})
local pg3 = wd.CreatePage({Name = "Credits"})
  
pg1.CreateToggle({
    Name = "Ctrl Click Tp",
    Callback = function(bool)
        Ctrl_click_tp = bool
    end
})
pg1.CreateButton({
    Name = "Dupe (l)",
    Callback = function()
        Notify('Dupping','Time left: 25 sec',5)
        spawn(function()
            local c = 1
            for i = 1,50 do
                pcall(function()
                    if c>#rep.Weapons:GetChildren() then
                        c = 1
                    end
                end)
                for _,v in next,plr.Character:GetChildren() do
                    if v.Name == 'Loaded' and v:IsA'IntValue' then
                        v:Destroy()
                    end
                end
                for _,v in next,plr.PlayerGui:GetDescendants() do
                    if v:IsA'RemoteEvent' and v.Name == 'RemoteEvent' then
                        pcall(function()
                            v:FireServer(rep.Weapons:GetChildren()[c].Name)
                            c=c+1
                        end)
                    end
                end
                wait(0.5)
            end
        end)
    end
})
pg1.CreateButton({
    Name = "Godmode",
    Callback = function()
        Notify('Godmode','Loading... wait 5 sec.',5)
        for _,v in next,plr.PlayerGui:GetChildren() do
            if v:IsA'ScreenGui' and v.Name ~= 'Chat' and v.Name ~= 'BubbleChat' then
                v.ResetOnSpawn = false
                spawn(function()
                    wait(5)
                    plr.CharacterAdded:wait()
                    if v then
                        v:Destroy()
                    end
                end)
            elseif v:IsA'LocalScript' then
                v.Parent = plr
                spawn(function()
                    wait(5)
                    v.Parent = plr.PlayerGui
                end)
            end
        end
        if plr.Character and plr.Character:FindFirstChildOfClass'Humanoid' then
            if plr.Character:FindFirstChild'Ragdolled' and plr.Character.Ragdolled:FindFirstChildOfClass'Script' then
                plr.Character.Ragdolled:FindFirstChildOfClass'Script':Destroy()
            end
            local char = plr.Character
            char.Archivable = true
            local new = char:Clone()
            new.Parent = workspace
            plr.Character = new
            wait(2)
            local oldhum = char:FindFirstChildOfClass'Humanoid'
            local newhum = oldhum:Clone()
            newhum.Parent = char
            newhum.RequiresNeck = false
            oldhum.Parent = nil
            wait(2)
            plr.Character = char
            new:Destroy()
            wait(1)
            newhum:GetPropertyChangedSignal('Health'):Connect(
                function()
                    if newhum.Health <= 0 then
                        oldhum.Parent = plr.Character
                        wait(1)
                        oldhum:Destroy()
                    end
                end)
            workspace.CurrentCamera.CameraSubject = char
        end
        Notify('Godmode','Godmode loaded',3)
    end
})
pg1.CreateButton({
    Name = "Lock Nearest (r)",
    Callback = function()
        tar = nil
        for _,v in next,workspace:GetDescendants() do
            if v.Name == 'SelectedPlayer' then
                v:Destroy()
            end
        end
        local n_plr, dist
        for _, v in pairs(game.Players:GetPlayers()) do
            if v ~= plr and plr.Character and plr.Character:FindFirstChild'HumanoidRootPart' then
                local distance = v:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position)
                if v.Character and (not dist or distance <= dist) and v.Character:FindFirstChildOfClass'Humanoid' and v.Character:FindFirstChildOfClass'Humanoid'.Health>0 and v.Character:FindFirstChild'HumanoidRootPart' then
                    dist = distance
                    n_plr = v
                end
            end
        end
        local sp = Instance.new('SelectionBox',n_plr.Character.HumanoidRootPart)
        sp.Name = 'SelectedPlayer'
        sp.Adornee = n_plr.Character.HumanoidRootPart
        tar = n_plr
    end
})
pg1.CreateButton({
    Name = "Hit Locked (q)",
    Callback = function()
        for _,v in next,plr.Character:GetDescendants() do
            if v:IsA'Tool' and v.Name ~= 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'DamageRemote' and v:FindFirstChild'Cooldown' and tar and tar.Character and tar.Character:FindFirstChildOfClass'Humanoid' then
                AddCd(v,v.Cooldown.Value)
                v.DamageRemote:FireServer(tar.Character:FindFirstChildOfClass'Humanoid')
                if v:FindFirstChild'Attack' and plr.Character:FindFirstChildOfClass'Humanoid' then
                    plr.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Attack):Play()
                end
                if v:FindFirstChild'Blade' then
                    for _,x in next,v.Blade:GetChildren() do
                        if x:IsA'Sound' then
                            x:Play()
                        end
                    end
                end
            elseif v:IsA'Tool' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' and tar and tar.Character and tar.Character:FindFirstChild'HumanoidRootPart' then
                v.Parent = plr.Character
                AddCd(v,2)
                rs:wait()
                Shoot(v.Barrel.Attachment.WorldPosition,tar.Character.HumanoidRootPart.Position,v)
                v.ReplicateRemote:FireServer(tar.Character.HumanoidRootPart.Position)
            end
        end
    end
})
pg1.CreateButton({
    Name = "Sniper Rifle (c)",
    Callback = function()
        wait(2)
        local guns = 0
        for _,v in next,plr.Backpack:GetChildren() do
            if guns<=10 and plr.Character and plr.Character:FindFirstChild'Head' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' then
                guns = guns+1
                AddCd(v,2)
                v.Parent = plr.Character
                Shoot(plr.Character.Head.Position,mouse.Hit.p,v)
                v.ReplicateRemote:FireServer(mouse.Hit.p)
                v.Parent = plr.Backpack
            end
        end
    end
})
pg1.CreateButton({
    Name = "Minigun (v)",
    Callback = function()
        wait(2)
        local c_ = 0
        for _,v in next,plr.Backpack:GetChildren() do
            c_=c_+1
            if c_>=10 then rs:wait() c_=0 end
            if plr.Character and plr.Character:FindFirstChild'Head' and v.Name == 'Kawaii Revolver' and v:FindFirstChild'ReplicateRemote' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' then
                AddCd(v,2)
                v.Parent = plr.Character
                Shoot(v.Barrel.Attachment.WorldPosition,mouse.Hit.p,v)
                v.ReplicateRemote:FireServer(mouse.Hit.p)
                rs:wait()
                v.Parent = plr.Backpack
            end
        end
    end
})
pg2.CreateButton({
    Name = "Spam C4",
    Callback = function()
        wait(1)
        for _,v in next,plr.Backpack:GetChildren() do
            if v.Name == 'C4' then
                pcall(function()
                    v.Parent = plr.Character
                    rs:wait()
                    v.RemoteEvent:FireServer()
                end)
            end
        end
    end
})
pg2.CreateButton({
    Name = "Spam Grenade",
    Callback = function()
        wait(1)
        for _,v in next,plr.Backpack:GetChildren() do
            if v.Name == 'Grenade' then
                pcall(function()
                    v.Parent = plr.Character
                    rs:wait()
                    v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                end)
            end
        end
    end
})
pg2.CreateButton({
    Name = "Spam Trap",
    Callback = function()
        wait(1)
        for _,v in next,plr.Backpack:GetChildren() do
            if v.Name == 'Spiked Trap' then
                pcall(function()
                    v.Parent = plr.Character
                    rs:wait()
                    v:Activate()
                end)
            end
        end
    end
})
pg2.CreateButton({
    Name = "Lag Others (100+ guns)",
    Callback = function()
        wait(2)
        local c_
        for _,v in next,plr.Backpack:GetChildren() do
            c_=c_+1
            if c_>=10 then rs:wait() c_=0 end
            if plr.Character and plr.Character:FindFirstChild'Head' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' then
                AddCd(v,2)
                v.Parent = plr.Character
                Shoot(plr.Character.Head.Position,mouse.Hit.p,v)
                v.ReplicateRemote:FireServer(mouse.Hit.p)
                v.Parent = plr.Backpack
            end
        end
    end
})
pg3.CreateButton({
    Name = "Made by TDB-E",
    Callback = function()
        Notify('Credits','Script made by TDB-E',5)
    end
})

end)

tab2.newButton("Kill Aura", "Button", function()
    
	if shared.settings then return end
 
shared.settings = {
   killaura = true,
   maxdistance = 30,
   debugging = true
}
 
local Players = game:GetService("Players")
local lp = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait() or Players.LocalPlayer
 
local function getchar(plr,yield)
   local plr = plr or lp
   return plr.Character or yield and plr.CharacterAdded:Wait()
end
 
local function gethumanoid(plr,yield)
   local plr = plr or lp
   local char = getchar(plr,yield)
   return yield and char:WaitForChild("Humanoid") or char:FindFirstChildWhichIsA("Humanoid")
end
 
local function getDamageRemote()
   local char = getchar(nil,true)
   local Tool = char:FindFirstChildWhichIsA("Tool")
   local Remote = Tool and Tool:FindFirstChild("DamageRemote")
   return Remote
end
 
local function GetClosestPlayer()
   local dist = shared.settings.maxdistance or 1/0
   local closest_player
 
   for i,v in next, Players:GetPlayers() do
       if v ~= lp then
           local char = getchar(v)
           if char and not char:FindFirstChildWhichIsA("ForceField") then
               local BasePart = char:FindFirstChildWhichIsA("BasePart")
               local Humanoid = gethumanoid(v)
               local DistanceFromTarget = BasePart and lp:DistanceFromCharacter(BasePart.CFrame.Position)
 
               if DistanceFromTarget and DistanceFromTarget <= dist and Humanoid and Humanoid.Health > 0 then
                   dist = DistanceFromTarget
                   closest_player = v
               end
           end
       end
   end
   return closest_player,dist    
end
 
repeat
   local DamageRemote = getDamageRemote()
   if DamageRemote then
       local Target,Distance = GetClosestPlayer()
       if Target then
           DamageRemote:FireServer(gethumanoid(Target))
           if shared.settings.debugging then
               warn("Attacked",Target,"from",Distance,"studs away")
           end
       end
   end
   task.wait()
until not shared.settings.killaura

end)

tab2.newButton("Fling Pro", "Button", function()
    
	-- player fling gui

local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local TextButton = Instance.new("TextButton")

ScreenGui.Parent = Player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
Frame.Position = UDim2.new(0.5, -100, 0.5, -50)
Frame.Size = UDim2.new(0, 200, 0, 100)
Frame.Active = true
Frame.Draggable = true

TextBox.Parent = Frame
TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBox.Position = UDim2.new(0.1, 0, 0.2, 0)
TextBox.Size = UDim2.new(0.8, 0, 0.2, 0)
TextBox.Font = Enum.Font.SourceSans
TextBox.PlaceholderText = "Enter username"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(0, 0, 0)
TextBox.TextSize = 14

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
TextButton.Position = UDim2.new(0.1, 0, 0.5, 0)
TextButton.Size = UDim2.new(0.8, 0, 0.4, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "FLING!"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 20

local function GetPlayer(Name)
    Name = Name:lower()
    for _, x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^" .. Name) or x.DisplayName:lower():match("^" .. Name) then
                return x
            end
        end
    end
    return nil
end

local function Message(_Title, _Text, Time)
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
end

local function SkidFling(TargetPlayer)
    local Character = Player.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart

    local TCharacter = TargetPlayer.Character
    local THumanoid = TCharacter and TCharacter:FindFirstChildOfClass("Humanoid")
    local TRootPart = THumanoid and THumanoid.RootPart
    local THead = TCharacter and TCharacter:FindFirstChild("Head")
    local Accessory = TCharacter and TCharacter:FindFirstChildOfClass("Accessory")
    local Handle = Accessory and Accessory:FindFirstChild("Handle")

    if Character and Humanoid and RootPart then
        if RootPart.Velocity.Magnitude < 50 then
            getgenv().OldPos = RootPart.CFrame
        end
        if THumanoid and THumanoid.Sit then
            return Message("Error Occurred", "Target is sitting", 5)
        end
        if THead then
            workspace.CurrentCamera.CameraSubject = THead
        elseif Handle then
            workspace.CurrentCamera.CameraSubject = Handle
        else
            workspace.CurrentCamera.CameraSubject = THumanoid
        end
        if not TCharacter:FindFirstChildWhichIsA("BasePart") then
            return
        end
        
        local function FPos(BasePart, Pos, Ang)
            RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
            Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
            RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
            RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
        end
        
        local function SFBasePart(BasePart)
            local TimeToWait = 2
            local Time = tick()
            local Angle = 0

            repeat
                if RootPart and THumanoid then
                    if BasePart.Velocity.Magnitude < 50 then
                        Angle = Angle + 100

                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                    else
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                    end
                else
                    break
                end
            until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
        end
        
        workspace.FallenPartsDestroyHeight = 0/0
        
        local BV = Instance.new("BodyVelocity")
        BV.Name = "EpixVel"
        BV.Parent = RootPart
        BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
        BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
        
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
        
        if TRootPart and THead then
            if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                SFBasePart(THead)
            else
                SFBasePart(TRootPart)
            end
        elseif TRootPart and not THead then
            SFBasePart(TRootPart)
        elseif not TRootPart and THead then
            SFBasePart(THead)
        elseif not TRootPart and not THead and Accessory and Handle then
            SFBasePart(Handle)
        else
            return Message("Error Occurred", "Target is missing everything", 5)
        end
        
        BV:Destroy()
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        workspace.CurrentCamera.CameraSubject = Humanoid
        
        repeat
            RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
            Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
            Humanoid:ChangeState("GettingUp")
            table.foreach(Character:GetChildren(), function(_, x)
                if x:IsA("BasePart") then
                    x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                end
            end)
            task.wait()
        until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
        workspace.FallenPartsDestroyHeight = getgenv().FPDH
    else
        return Message("Error Occurred", "Random error", 5)
    end
end

TextButton.MouseButton1Click:Connect(function()
    local targetName = TextBox.Text
    local targetPlayer = GetPlayer(targetName)

    if targetPlayer then
        SkidFling(targetPlayer)
    else
        Message("Error Occurred", "Invalid username", 5)
    end
end)
