-- Game-specific script mapping (Name + PlaceId)
local gameScripts = {
    [6441847031] = {
        url = "https://raw.githubusercontent.com/KingDarkness001/TDB-E/refs/heads/main/1TSK%26TDB1",
        name = "Chaos"
    },
    [17357719939] = {
        url = "https://raw.githubusercontent.com/KingDarkness001/TDB-E/refs/heads/main/TDBwest",
        name = "Wizard West"
    }
}


local function showNotice(text)
    local existing = game.CoreGui:FindFirstChild("GameNotice")
    if existing then existing:Destroy() end

    local gui = Instance.new("ScreenGui")
    gui.Name = "GameNotice"
    gui.ResetOnSpawn = false
    gui.Parent = game:GetService("CoreGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 420, 0, 140)
    frame.Position = UDim2.new(0.5, -210, 0.15, 0)
    frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    frame.BorderSizePixel = 0
    frame.Parent = gui
    frame.BackgroundTransparency = 0.2
    frame.ClipsDescendants = true
    frame.Name = "NoticeFrame"

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 1, -20)
    label.Position = UDim2.new(0, 10, 0, 10)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text
    label.TextScaled = true
    label.TextWrapped = true
    label.Font = Enum.Font.GothamBold
    label.Parent = frame

    task.delay(8, function()
        if gui then gui:Destroy() end
    end)
end


local currentGame = game.PlaceId
local info = gameScripts[currentGame]

if info then

    loadstring(game:HttpGet(info.url))()
else

    showNotice("‚ùå This game is not supported.\nWe didn‚Äôt make a script for this game yet.")


    local listText = "üìú Supported Games List:\n"
    for placeId, data in pairs(gameScripts) do
        listText = listText .. "- " .. data.name .. " (ID: " .. placeId .. ")\n"
    end
    task.delay(4.5, function() -- show after the first fades
        showNotice(listText)
    end)
end
